builddir = build

cflags = -g -I src -Werror -Wall -Wextra -std=c11 -pedantic -Wno-unused-value -Wno-unused-function

rule cc
  depfile = $out.d
  deps = gcc
  command = gcc -MMD -MF $out.d -c $cflags $in -o $out

rule ld
  command = gcc $in -o $out -lm

rule test
  command = valgrind --quiet --leak-check=yes $in

build $builddir/rax.o: cc src/rax.c

build $builddir/util.o: cc src/util.c

build $builddir/lexer.o: cc src/lexer.c
build $builddir/test/lexer.o: cc test/lexer.c
build $builddir/test/lexer: ld $builddir/test/lexer.o $builddir/lexer.o $builddir/util.o

build $builddir/parser.o: cc src/parser.c
build $builddir/test/parser.o: cc test/parser.c
build $builddir/test/parser: ld $builddir/test/parser.o $builddir/parser.o $builddir/lexer.o $builddir/util.o $builddir/rax.o

build $builddir/cc.o: cc src/cc.c
build $builddir/test/cc.o: cc test/cc.c
build $builddir/test/cc: ld $builddir/test/cc.o $builddir/cc.o $builddir/parser.o $builddir/lexer.o $builddir/rax.o $builddir/util.o

build $builddir/context.o: cc src/context.c
build $builddir/test/context.o: cc test/context.c
build $builddir/test/context: ld $builddir/test/context.o $builddir/context.o $builddir/parser.o $builddir/lexer.o $builddir/rax.o $builddir/cc.o $builddir/util.o

build test_lexer: test $builddir/test/lexer
build test_parser: test $builddir/test/parser
build test_cc: test $builddir/test/cc
build test_context: test $builddir/test/context
build test_analyze: test $builddir/test/analyze
